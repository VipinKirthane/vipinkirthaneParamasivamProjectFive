{"version":3,"sources":["components/Page2.js","components/Page3.js","App.js","serviceWorker.js","index.js"],"names":["Page2","rocketSelectionHandlerLatestLaunches","axios","url","method","dataResponse","then","response","setState","rockets","data","rocketSelectionHandlerPastLaunches","rocketSelectionHandlerUpcomingLaunches","className","id","this","props","launches","map","rocket","flight_number","mission_name","launch_success","activeClass","to","spy","smooth","offset","duration","href","onClick","selectRocket","revealPage3","launchType","class","Component","Page3","image","video","details","launch_year","undefined","links","flickr_images","video_link","playing","volume","width","control","src","alt","App","revealPage2","showPage2","document","getElementById","scrollIntoView","behavior","showPage3","catch","alert","state","rocketToShow","rocket_id","specificRocket","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8b99d7f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, animateScroll as scroll } from \"react-scroll\";\n\nclass Page2 extends Component {\n\n    // Latest Launches\n    rocketSelectionHandlerLatestLaunches = () => {\n        axios({\n            url: 'https://api.spacexdata.com/v3/launches/latest',\n            method: 'GET',\n            dataResponse: 'json'\n        }).then((response) => {\n            this.setState({\n                rockets: response.data,\n            })\n        });\n    }\n\n    // Past Launches\n    rocketSelectionHandlerPastLaunches = () => {\n        axios({\n            url: 'https://api.spacexdata.com/v3/launches/past',\n            method: 'GET',\n            dataResponse: 'json'\n        }).then((response) => {\n            this.setState({\n                rockets: response.data,\n            })\n        });\n    }\n\n    // Upcoming Launches\n    rocketSelectionHandlerUpcomingLaunches = () => {\n        axios({\n            url: 'https://api.spacexdata.com/v3/launches/upcoming',\n            method: 'GET',\n            dataResponse: 'json'\n        }).then((response) => {\n            this.setState({\n                rockets: response.data,\n            })\n        });\n    }\n\n\n    render () {\n        return (\n            <section className='page2' id='page2Link'>\n                <div className='wrapper'>\n                    <h2>CHOOSE A ROCKET OF INTEREST</h2>\n                    <div className='firstRowRocketList'>\n                        {\n                            this.props.launches.map((rocket) => {\n                                const { flight_number, mission_name, launch_success } = rocket;\n                                // if (launch_success === null)\n                                return (\n                                    <div>\n                                        <Link\n                                            activeClass='active'\n                                            to='page3Link'\n                                            spy={true}\n                                            smooth={true}\n                                            offset={0}\n                                            duration={500}\n                                            href='#page3Link'\n                                            className=\"rocket1Button tabindex='0'\"\n                                            onClick = {() => {this.props.selectRocket(rocket); this.props.revealPage3()}}\n                                        >\n                                            {/* <a  > */}\n                                            <div className=\"rocketsList\">\n                                                    <div className='topHalf'>\n                                                        <h4 className='flightNumber topHalf'>Rocket Number</h4>\n                                                        <p>{flight_number}</p>\n                                                    </div>\n                                                    <div className='missionName'>\n                                                        <p>Mission Name</p>\n                                                        <p>{mission_name}</p>\n                                                    </div>\n                                                    <div className='missionStatus'>\n                                                        <p>Launch Status</p>\n                                                        { this.props.launchType !== 'upcoming' ? <p>{launch_success ? 'Success' : 'Failure'}</p> : <p>Not Applicable</p>}\n\n                                                    </div>\n                                                </div>\n                                            {/* </a> */}\n                                        </Link>\n                                        <Link\n                                            activeClass='active'\n                                            to='mainLink'\n                                            spy={true}\n                                            smooth={true}\n                                            offset={0}\n                                            duration={500}\n                                            href='#page3Link'\n                                            className=\"rocket1Button tabindex='0'\"\n                                            onClick={() => { this.props.selectRocket(rocket); this.props.revealPage3() }}\n                                        >\n                                            <i class=\"fas fa-rocket tabindex='0'\"></i>\n                                        </Link>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default Page2;","import React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\n\nclass Page3 extends Component {\n\n    render () {\n        // rocket details\n        const { flight_number, details, launch_year, mission_name, launch_success } = this.props.rocket;\n        // rocket image and image\n        let image, video;\n        if(this.props.rocket.links !== undefined){\n            image = this.props.rocket.links.flickr_images[0];\n            video = this.props.rocket.links.video_link;\n        }\n\n        return (\n            <section className=\"page3\" id=\"page3Link\">\n                <div className=\"wrapper\">\n                    <h2 className=\"page3Header\">ROCKET - <span>{flight_number}</span></h2>\n\n                    <div className=\"topHalfPage3launchVideo tabindex='0'\">\n                        <ReactPlayer url={video} playing='false' volume='0' width='100%' className=\"tabIndex='0'\"control='true'/>\n                    </div>\n\n                    <div className=\"page3Halves\">\n                        <div className=\"leftHalfPage3\">\n                            <div className=\"rocketImage tabindex='0'\">\n                                {/* The alt text of imageNotFound.jpg is empty because console said it's redundant */}\n                                {image !== undefined ? <img src={image} alt=\"A rocket in the frame\" /> : <img src=\"./assets/imageNotFound.jpg\" alt=\"\" />}\n                            </div>\n                        </div>\n\n                        <div className=\"rightHalfPage3 tabindex='0'\">\n                            <p><span className=\"page3FlightNumber\">Rocket Number: </span>{flight_number}</p>\n                            <p><span className=\"page3MissionName\">Mission Name: </span>{mission_name}</p>\n\n                            <p><span className=\"page3AnotherStuff\">Launch Year: </span>{launch_year}</p>\n                            <p><span className=\"page3StatusOfMission\">Status of Mission: </span>{this.props.launchType !== 'upcoming' ? <span>{launch_success ? \"Success\" : \"Failure\"}</span> : <span className=\"notApplicable\">Not Applicable</span>}</p>\n\n                            <p><span className=\"page3RocketType\">Details: </span>{details}</p>\n                            {/* <p><span className=\"page3NameSomething\">Name something:</span>{rocket.rocket_id}</p> */}\n                        </div>\n                    </div>\n                </div>\n                <footer>Copyright © Vipin Kirthane 2019</footer>\n            </section>\n        )\n    }\n}\n\nexport default Page3;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Page2 from './components/Page2';\nimport Page3 from './components/Page3';\nimport './App.css';\n\nclass App extends Component {\n  // 1.Initializing the state\n  constructor() {\n    super();\n    this.state = {\n      rockets: [],\n      showPage2: false,\n      showPage3: false,\n      rocketToShow: {},\n      launchType: '',\n    }\n  }\n\n  revealPage2 = () => {\n    this.setState({\n      showPage2: true,\n    }, () => {\n        document.getElementById('page2Link').scrollIntoView({\n          behavior: 'smooth'\n        });\n    })\n  }\n\n  revealPage3 = () => {\n    this.setState({\n      showPage3: true,\n    }, () => {\n      document.getElementById('page3Link').scrollIntoView({\n        behavior: 'smooth'\n      });\n    })\n  }\n\n  // Latest Launches\n  rocketSelectionHandlerLatestLaunches = () => {\n    axios({\n      url: 'https://api.spacexdata.com/v3/launches/latest',\n      method: 'GET',\n      dataResponse: 'json'\n    }).then((response) => {\n      this.setState({\n        rockets: [response.data],\n      }, () => { this.setState({\n        launchType: 'latest'\n      }); this.revealPage2() })\n    }).catch ( () => {\n      alert('Network Error! Please Reload Page')\n    })\n  }\n\n  // Past Launches\n  rocketSelectionHandlerPastLaunches = () => {\n    axios({\n      url: 'https://api.spacexdata.com/v3/launches/past',\n      method: 'GET',\n      dataResponse: 'json'\n    }).then((response) => {\n      this.setState({\n        rockets: response.data,\n      }, () => { this.setState({\n        launchType: 'past'\n      }) ; this.revealPage2() })\n    }).catch ( () => {\n      alert('Network Error! Please Reload page');\n    })\n  }\n\n  // Upcoming Launches\n  rocketSelectionHandlerUpcomingLaunches = () => {\n    axios({\n      url: 'https://api.spacexdata.com/v3/launches/upcoming',\n      method: 'GET',\n      dataResponse: 'json'\n    }).then((response) => {\n      this.setState({\n        rockets: response.data,\n      }, () => { this.setState({\n        launchType: 'upcoming'\n      }) ;this.revealPage2() })\n    }).catch ( () => {\n      alert('Network Error! Please Reload Page');\n    })\n  }\n\n  render () {\n    return (\n      <div>\n        <div className='page1' id='mainLink'>\n          <h1>Space X Rocket Portfolio</h1>\n          <main className='mainOptions wrapper'>\n\n              <div className=\"firstOptionParent\"><button\n                className=\"firstOption tabindex='0'\"\n                onClick={() => { this.rocketSelectionHandlerLatestLaunches() } }>\n                LATEST LAUNCHES{this.state.rockets.launch_year}</button></div>\n\n              <div><button\n              className=\"secondOption tabindex='0'\"\n              onClick={() => {this.rocketSelectionHandlerPastLaunches() } }>\n                PAST LAUNCHES{this.state.rockets.rocket_id}</button></div>\n\n              <div><button\n              className=\"thirdOption tabindex='0'\"\n              onClick={() => {this.rocketSelectionHandlerUpcomingLaunches()}}>\n                UPCOMING LAUNCHES{this.state.rockets.mission_name}</button></div>\n\n          </main>\n        </div>\n\n      {\n      this.state.showPage2 ?\n        <div >\n          <Page2\n          launches={this.state.rockets}\n          revealPage3={this.revealPage3}\n          launchType = {this.state.launchType}\n          selectRocket= {(specificRocket) => {\n            this.setState({\n              rocketToShow : specificRocket,\n            })\n          }} />\n        </div>\n        :\n        null\n      }\n\n      {\n        this.state.showPage3 ?\n          <div >\n            <Page3 rocket={this.state.rocketToShow}\n                launchType={this.state.launchType}/>\n          </div>\n          :\n          null\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// Include accessibility\n// Include placeholder image for missing video in upcoming launches\n// Try to add ternary operator for empty details for flights such as 104\n\n// Add google fonts\n// fix sizes of the rocket cards\n\n// Link is bursting out in page 2\n\n// Comment the code\n// Each child should have unique index\n// check the console for errors","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}